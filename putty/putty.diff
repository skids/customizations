Only in putty-0.63.customized: deselect
diff -U2 -r putty-0.63/unix/gtkwin.c putty-0.63.customized/unix/gtkwin.c
--- putty-0.63/unix/gtkwin.c	2015-06-03 22:58:53.000000000 -0400
+++ putty-0.63.customized/unix/gtkwin.c	2015-06-03 22:55:19.251376298 -0400
@@ -89,4 +89,6 @@
     char *pasteout_data, *pasteout_data_ctext, *pasteout_data_utf8;
     int pasteout_data_len, pasteout_data_ctext_len, pasteout_data_utf8_len;
+    char *clipbout_data, *clipbout_data_ctext, *clipbout_data_utf8;
+    int clipbout_data_len, clipbout_data_ctext_len, clipbout_data_utf8_len;
     int font_width, font_height;
     int width, height;
@@ -1255,5 +1257,5 @@
     alt = state & GDK_MOD1_MASK;
 
-    if (ebutton == 3 && ctrl) {
+    if (ebutton == 3 && !ctrl) {
 	gtk_menu_popup(GTK_MENU(inst->menu), NULL, NULL, NULL, NULL,
 		       ebutton, timestamp);
@@ -1829,16 +1831,35 @@
 {
     struct gui_data *inst = (struct gui_data *)data;
-    if (seldata->target == utf8_string_atom)
-	gtk_selection_data_set(seldata, seldata->target, 8,
-			       (unsigned char *)inst->pasteout_data_utf8,
-			       inst->pasteout_data_utf8_len);
-    else if (seldata->target == compound_text_atom)
-	gtk_selection_data_set(seldata, seldata->target, 8,
-			       (unsigned char *)inst->pasteout_data_ctext,
-			       inst->pasteout_data_ctext_len);
-    else
-	gtk_selection_data_set(seldata, seldata->target, 8,
-			       (unsigned char *)inst->pasteout_data,
-			       inst->pasteout_data_len);
+    if (info == 1) {
+        if (seldata->target == utf8_string_atom)
+            gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->pasteout_data_utf8,
+			           inst->pasteout_data_utf8_len);
+        else if (seldata->target == compound_text_atom)
+	    gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->pasteout_data_ctext,
+			           inst->pasteout_data_ctext_len);
+        else
+	    gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->pasteout_data,
+			           inst->pasteout_data_len);
+    }
+    else if (info == 2) {
+        if (seldata->target == utf8_string_atom)
+            gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->clipbout_data_utf8,
+			           inst->clipbout_data_utf8_len);
+        else if (seldata->target == compound_text_atom)
+	    gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->clipbout_data_ctext,
+			           inst->clipbout_data_ctext_len);
+        else
+	    gtk_selection_data_set(seldata, seldata->target, 8,
+			           (unsigned char *)inst->clipbout_data,
+			           inst->clipbout_data_len);
+    }
+    else {
+	gtk_selection_data_set(seldata, seldata->target, 8, NULL, 0);
+    }
 }
 
@@ -1848,21 +1869,41 @@
     struct gui_data *inst = (struct gui_data *)data;
 
-    term_deselect(inst->term);
-    if (inst->pasteout_data)
-	sfree(inst->pasteout_data);
-    if (inst->pasteout_data_ctext)
-	sfree(inst->pasteout_data_ctext);
-    if (inst->pasteout_data_utf8)
-	sfree(inst->pasteout_data_utf8);
-    inst->pasteout_data = NULL;
-    inst->pasteout_data_len = 0;
-    inst->pasteout_data_ctext = NULL;
-    inst->pasteout_data_ctext_len = 0;
-    inst->pasteout_data_utf8 = NULL;
-    inst->pasteout_data_utf8_len = 0;
-    return TRUE;
+    if (seldata->selection == GDK_SELECTION_PRIMARY) {
+        term_deselect(inst->term);
+        if (inst->pasteout_data)
+	    sfree(inst->pasteout_data);
+        if (inst->pasteout_data_ctext)
+            sfree(inst->pasteout_data_ctext);
+        if (inst->pasteout_data_utf8)
+	    sfree(inst->pasteout_data_utf8);
+        inst->pasteout_data = NULL;
+        inst->pasteout_data_len = 0;
+        inst->pasteout_data_ctext = NULL;
+        inst->pasteout_data_ctext_len = 0;
+        inst->pasteout_data_utf8 = NULL;
+        inst->pasteout_data_utf8_len = 0;
+        return TRUE;
+    }
+    else if (seldata->selection == GDK_SELECTION_CLIPBOARD) {
+        if (inst->clipbout_data)
+	    sfree(inst->clipbout_data);
+        if (inst->clipbout_data_ctext)
+            sfree(inst->clipbout_data_ctext);
+        if (inst->clipbout_data_utf8)
+	    sfree(inst->clipbout_data_utf8);
+        inst->clipbout_data = NULL;
+        inst->clipbout_data_len = 0;
+        inst->clipbout_data_ctext = NULL;
+        inst->clipbout_data_ctext_len = 0;
+        inst->clipbout_data_utf8 = NULL;
+        inst->clipbout_data_utf8_len = 0;
+        return TRUE;
+    }
+    else {
+        return TRUE;
+    }
 }
 
-void request_paste(void *frontend)
+void request_paste_of(void *frontend, GdkAtom gdk_selection)
 {
     struct gui_data *inst = (struct gui_data *)frontend;
@@ -1881,5 +1922,5 @@
 	 * fall back to an ordinary string.
 	 */
-	gtk_selection_convert(inst->area, GDK_SELECTION_PRIMARY,
+	gtk_selection_convert(inst->area, gdk_selection,
 			      utf8_string_atom,
 			      inst->input_event_time);
@@ -1889,5 +1930,5 @@
 	 * pasting, and go straight to ordinary string data.
 	 */
-	gtk_selection_convert(inst->area, GDK_SELECTION_PRIMARY,
+	gtk_selection_convert(inst->area, gdk_selection,
 			      GDK_SELECTION_TYPE_STRING,
 			      inst->input_event_time);
@@ -1895,4 +1936,9 @@
 }
 
+void request_paste(void *frontend)
+{
+    request_paste_of(frontend, GDK_SELECTION_PRIMARY);
+}
+
 gint idle_paste_func(gpointer data);   /* forward ref */
 
@@ -1914,5 +1960,5 @@
 	 * text next.
 	 */
-	gtk_selection_convert(inst->area, GDK_SELECTION_PRIMARY,
+	gtk_selection_convert(inst->area, seldata->selection,
 			      compound_text_atom,
 			      inst->input_event_time);
@@ -1925,5 +1971,5 @@
 	 * string.
 	 */
-	gtk_selection_convert(inst->area, GDK_SELECTION_PRIMARY,
+	gtk_selection_convert(inst->area, seldata->selection,
 			      GDK_SELECTION_TYPE_STRING,
 			      inst->input_event_time);
@@ -1967,5 +2013,5 @@
 		 * Compound text failed; fall back to STRING.
 		 */
-		gtk_selection_convert(inst->area, GDK_SELECTION_PRIMARY,
+		gtk_selection_convert(inst->area, seldata->selection,
 				      GDK_SELECTION_TYPE_STRING,
 				      inst->input_event_time);
@@ -2974,4 +3020,70 @@
 }
 
+void clipboard_copy_menuitem(GtkMenuItem *item, gpointer data)
+{
+    struct gui_data *inst = (struct gui_data *)data;
+
+    void *mem;
+    if (inst->clipbout_data) {
+        mem = inst->clipbout_data;
+        inst->clipbout_data_len = 0;
+        inst->clipbout_data = NULL;
+	sfree(mem);
+    }
+    if (inst->clipbout_data_ctext) {
+        mem = inst->clipbout_data_ctext;
+        inst->clipbout_data_ctext_len = 0;
+        inst->clipbout_data_ctext = NULL;
+	sfree(mem);
+    }
+    if (inst->clipbout_data_utf8) {
+        mem = inst->clipbout_data_utf8;
+        inst->clipbout_data_utf8_len = 0;
+        inst->clipbout_data_utf8 = NULL;
+	sfree(mem);
+    }
+    if (inst->pasteout_data) {
+        mem = snewn(inst->pasteout_data_len, char);
+	memcpy(mem, inst->pasteout_data, inst->pasteout_data_len);
+	inst->clipbout_data = mem;
+	inst->clipbout_data_len = inst->pasteout_data_len;
+    }
+    if (inst->pasteout_data_utf8) {
+        /* On this one they allocate/init an extra \0 terminator but do not count it in _len */
+        mem = snewn(inst->pasteout_data_utf8_len + 1, char);
+	memcpy(mem, inst->pasteout_data_utf8, inst->pasteout_data_utf8_len + 1);
+	inst->clipbout_data_utf8 = mem;
+	inst->clipbout_data_utf8_len = inst->pasteout_data_utf8_len;
+    }
+    if (inst->pasteout_data_ctext) {
+        /* On this one they allocate an extra byte (possibly zeroed) and do not count it in _len */
+        mem = snewn(inst->pasteout_data_ctext_len + 1, char);
+	memcpy(mem, inst->pasteout_data_ctext, inst->pasteout_data_ctext_len + 1);
+	inst->clipbout_data_ctext = mem;
+	inst->clipbout_data_ctext_len = inst->pasteout_data_ctext_len;
+    }
+
+    if (gtk_selection_owner_set(inst->area, GDK_SELECTION_CLIPBOARD,
+				inst->input_event_time)) {
+#if GTK_CHECK_VERSION(2,0,0)
+	gtk_selection_clear_targets(inst->area, GDK_SELECTION_CLIPBOARD);
+#endif
+	gtk_selection_add_target(inst->area, GDK_SELECTION_CLIPBOARD,
+				 GDK_SELECTION_TYPE_STRING, 2);
+	if (inst->pasteout_data_ctext)
+	    gtk_selection_add_target(inst->area, GDK_SELECTION_CLIPBOARD,
+				     compound_text_atom, 2);
+	if (inst->pasteout_data_utf8)
+	    gtk_selection_add_target(inst->area, GDK_SELECTION_CLIPBOARD,
+				     utf8_string_atom, 2);
+    }
+}
+
+void clipboard_paste_menuitem(GtkMenuItem *item, gpointer data)
+{
+    struct gui_data *inst = (struct gui_data *)data;
+    request_paste_of(inst, GDK_SELECTION_CLIPBOARD);
+}
+
 void clear_scrollback_menuitem(GtkMenuItem *item, gpointer data)
 {
@@ -3825,4 +3937,7 @@
         } while (0)
 
+        MKMENUITEM("Copy (to clipboard)", clipboard_copy_menuitem);
+        MKMENUITEM("Paste (from clipboard)", clipboard_paste_menuitem);
+	MKSEP();
 	if (new_session)
 	    MKMENUITEM("New Session...", new_session_menuitem);
